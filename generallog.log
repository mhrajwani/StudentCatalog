TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47a5b70d
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47a5b70d
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47a5b70d
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [UPGRADE_SKIPLOCKED]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424fd310]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a45193b
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a45193b
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a45193b
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [FORCE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38f116f6]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5286c33a
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5286c33a
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5286c33a
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_READ]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6d5d29]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c530d1e
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c530d1e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c530d1e
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_WRITE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c25e6c4]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@85e6769
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@85e6769
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@85e6769
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_FORCE_INCREMENT]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5ee75e]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@48a12036
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@48a12036
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@48a12036
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [OPTIMISTIC]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf1ec20]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70efb718
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70efb718
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@70efb718
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [OPTIMISTIC_FORCE_INCREMENT]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static select for action ACTION_MERGE on entity com.fdmgroup.model.Professor: /* load com.fdmgroup.model.Professor */ select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static select for action ACTION_REFRESH on entity com.fdmgroup.model.Professor: /* load com.fdmgroup.model.Professor */ select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static SQL for entity: com.fdmgroup.model.Student
DEBUG -  Version select: /* get version com.fdmgroup.model.Student */ select studentID from Student where studentID =?
DEBUG -  Snapshot select: /* get current state com.fdmgroup.model.Student */ select student_.studentID, student_.firstName as firstNam2_1_, student_.lastName as lastName3_1_, student_.ssn as ssn4_1_ from Student student_ where student_.studentID=?
DEBUG -  Insert 0: /* insert com.fdmgroup.model.Student */ insert into Student (firstName, lastName, ssn, studentID) values (?, ?, ?, ?)
DEBUG -  Update 0: /* update com.fdmgroup.model.Student */ update Student set firstName=?, lastName=?, ssn=? where studentID=?
DEBUG -  Delete 0: /* delete com.fdmgroup.model.Student */ delete from Student where studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463b4ac8]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@765f05af
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@765f05af
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@765f05af
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [NONE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f68dff]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f001896
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f001896
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f001896
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [READ]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13f17eb4]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d0d6318
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d0d6318
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d0d6318
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bc28c33]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4409e975
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4409e975
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4409e975
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE_NOWAIT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c153b9e]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a7686a7
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a7686a7
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a7686a7
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE_SKIPLOCKED]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec3394b]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [FORCE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1522d8a0]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@312ab28e
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@312ab28e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@312ab28e
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_READ]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5644dc81]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@246f8b8b
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@246f8b8b
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@246f8b8b
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_WRITE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278bb07e]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_FORCE_INCREMENT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3381b4fc]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6bea52d4
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6bea52d4
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6bea52d4
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [OPTIMISTIC]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11981797]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c42d2b7
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c42d2b7
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c42d2b7
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [OPTIMISTIC_FORCE_INCREMENT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Static select for action ACTION_MERGE on entity com.fdmgroup.model.Student: /* load com.fdmgroup.model.Student */ select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Static select for action ACTION_REFRESH on entity com.fdmgroup.model.Student: /* load com.fdmgroup.model.Student */ select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Instantiated session factory
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@8f4ea7c [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6db7e62c)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@1d2adfbe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@2ccca26f
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@8f4ea7c [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6db7e62c)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
INFO - HHH000228: Running hbm2ddl schema update
TRACE - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@8f4ea7c [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6db7e62c)
TRACE - Normalizing identifier quoting [ADMIN_ID_SEQ]
TRACE - Normalizing identifier quoting [HIBERNATE_SEQUENCE]
TRACE - Normalizing identifier quoting [LOGMNR_DIDS$]
TRACE - Normalizing identifier quoting [LOGMNR_EVOLVE_SEQ$]
TRACE - Normalizing identifier quoting [LOGMNR_SEQ$]
TRACE - Normalizing identifier quoting [LOGMNR_UIDS$]
TRACE - Normalizing identifier quoting [MVIEW$_ADVSEQ_GENERIC]
TRACE - Normalizing identifier quoting [MVIEW$_ADVSEQ_ID]
TRACE - Normalizing identifier quoting [PROFESSOR_ID_SEQ]
TRACE - Normalizing identifier quoting [ROLLING_EVENT_SEQ$]
TRACE - Normalizing identifier quoting [STUDENT_ID_SEQ]
TRACE - Normalizing identifier quoting [USER_ID_SEQ]
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@8f4ea7c [managed: 2, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6db7e62c)
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorID]
TRACE - Rendering unquoted identifier [professorID] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORID]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorName]
TRACE - Rendering unquoted identifier [professorName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorPassword]
TRACE - Rendering unquoted identifier [professorPassword] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORPASSWORD]
DEBUG - No alter strings for table : Professor
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [studentID]
TRACE - Rendering unquoted identifier [studentID] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [STUDENTID]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [firstName]
TRACE - Rendering unquoted identifier [firstName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [FIRSTNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [lastName]
TRACE - Rendering unquoted identifier [lastName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [LASTNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [ssn]
TRACE - Rendering unquoted identifier [ssn] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [SSN]
DEBUG - No alter strings for table : Student
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@1d2adfbe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@546ccad7
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@8f4ea7c [managed: 2, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@6db7e62c)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
TRACE - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
DEBUG - No JtaPlatform was specified, checking resolver
TRACE - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
DEBUG - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44828f6b
TRACE - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
DEBUG - Registering SessionFactory: 235f52f2-bd06-4f6a-9cf6-8c8bb093e554 (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
TRACE - Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
DEBUG - No actions specified; doing nothing
TRACE - Wrapping up metadata context...
TRACE - Starting entity [com.fdmgroup.model.Professor]
TRACE - Building identifier attribute [com.fdmgroup.model.Professor.professorID]
TRACE - Starting attribute metadata determination [professorID]
TRACE -     Determined member [private int com.fdmgroup.model.Professor.professorID]
TRACE -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
TRACE - Building attribute [com.fdmgroup.model.Professor.professorName]
TRACE - Starting attribute metadata determination [professorName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Professor.professorName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Professor.professorPassword]
TRACE - Starting attribute metadata determination [professorPassword]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Professor.professorPassword]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Completed entity [com.fdmgroup.model.Professor]
TRACE - Starting entity [com.fdmgroup.model.Student]
TRACE - Building identifier attribute [com.fdmgroup.model.Student.studentID]
TRACE - Starting attribute metadata determination [studentID]
TRACE -     Determined member [private int com.fdmgroup.model.Student.studentID]
TRACE -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
TRACE - Building attribute [com.fdmgroup.model.Student.firstName]
TRACE - Starting attribute metadata determination [firstName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.firstName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Student.lastName]
TRACE - Starting attribute metadata determination [lastName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.lastName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Student.ssn]
TRACE - Starting attribute metadata determination [ssn]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.ssn]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Completed entity [com.fdmgroup.model.Student]
DEBUG - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@7651218e
DEBUG - Registering EntityManagerFactory: users 
TRACE - Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@226642a5
TRACE - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
DEBUG - Statistics initialized [enabled=false]
TRACE - Opened session at timestamp: 15896615067
TRACE - Setting flush mode to: AUTO
TRACE - Setting cache mode to: NORMAL
TRACE - Starting createEntityManagerFactory for persistenceUnitName users
TRACE - Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : users
DEBUG - Incoming config yielded no classloaders; adding standard SE ones
TRACE - Attempting to parse persistence.xml file : file:/C:/Users/Home/eclipse-workspace2/StudentCatalog/target/classes/META-INF/persistence.xml
TRACE - JAR URL from URL Entry: file:/C:/Users/Home/eclipse-workspace2/StudentCatalog/target/classes/META-INF/persistence.xml >> file:/C:/Users/Home/eclipse-workspace2/StudentCatalog/target/classes/
TRACE - Persistence unit name from persistence.xml : users
DEBUG - Located and parsed 1 persistence units; checking each
DEBUG - Checking persistence-unit [name=users, explicit-provider=null] against incoming persistence unit name [users]
DEBUG - No PersistenceProvider explicitly requested, assuming Hibernate
TRACE - Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
DEBUG - PersistenceUnitInfo [
	name: users
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Home/eclipse-workspace2/StudentCatalog/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.c3p0.timeout: 300
		hibernate.use_sql_comments: true
		hibernate.connection.driver_class: oracle.jdbc.driver.OracleDriver
		hibernate.c3p0.max_statements: 50
		hibernate.c3p0.max_size: 3
		hibernate.dialect: org.hibernate.dialect.OracleDialect
		hibernate.c3p0.idle_test_period: 3000
		hibernate.format_sql: true
		hibernate.c3p0.min_size: 2
		hibernate.connection.username: system
		hibernate.archive.autodetection: class, hbm
		hibernate.hbm2ddl.auto: update
		hibernate.connection.url: jdbc:oracle:thin:@localhost:1521:xe
		hibernate.show_sql: true
		hibernate.connection.password: 786Rashid110]
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
TRACE - Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
TRACE - Registering named strategy selector [org.hibernate.resource.transaction.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
TRACE - Registering named strategy selector [org.hibernate.resource.transaction.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
TRACE - Registering named strategy selector [org.hibernate.resource.transaction.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
TRACE - Registering named strategy selector [org.hibernate.resource.transaction.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
TRACE - Registering named strategy selector [org.hibernate.resource.transaction.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
TRACE - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
TRACE - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
TRACE - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
TRACE - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver]
TRACE - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver]
TRACE - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver]
TRACE - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
TRACE - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
TRACE - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
TRACE - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
TRACE - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
TRACE - Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
TRACE - Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
TRACE - Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
TRACE - Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
TRACE - Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
TRACE - Initializing service [role=org.hibernate.cache.spi.RegionFactory]
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
TRACE - Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@c81cdd1
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@c81cdd1
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c81cdd1
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22eeefeb
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12c8a2c0
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@18bf3d14
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@6ec8211c
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@6ec8211c
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ec8211c
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@4524411f
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@4524411f
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4524411f
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@2eda0940
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@2eda0940
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2eda0940
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@67b467e9
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@67b467e9
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67b467e9
DEBUG - Adding type registration long -> org.hibernate.type.LongType@646007f4
DEBUG - Adding type registration long -> org.hibernate.type.LongType@646007f4
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@646007f4
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@2641e737
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@2641e737
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2641e737
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@319b92f3
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@319b92f3
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@319b92f3
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fd66ad3
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fd66ad3
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5fdba6f9
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5fdba6f9
DEBUG - Adding type registration string -> org.hibernate.type.StringType@5123a213
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@5123a213
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@281e3708
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4516af24
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@16022d9d
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16022d9d
DEBUG - Adding type registration date -> org.hibernate.type.DateType@134593bf
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@134593bf
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@5fcd892a
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fcd892a
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@5427c60c
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5427c60c
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5427c60c
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f23557
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@43d7741f
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43d7741f
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43d7741f
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27fe3806
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@4f51b3e0
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4f51b3e0
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@1ad282e0
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ad282e0
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2473b9ce
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2473b9ce
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@71d15f18
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71d15f18
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a40cd94
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a40cd94
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58a90037
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@2f490758
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f490758
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@2f490758
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@588df31b
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@588df31b
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@588df31b
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@6e2c9341
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@1ee807c6
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ee807c6
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@1ee807c6
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@679b62af
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@679b62af
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@679b62af
DEBUG - Adding type registration text -> org.hibernate.type.TextType@49c43f4e
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@2d127a61
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@3444d69d
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3444d69d
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37574691
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@49070868
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@49070868
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@58fdd99
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58fdd99
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70b0b186
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d20e46
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@525b461a
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@4450d156
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4450d156
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cc69cfe
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29cfd92b
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21c64522
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7997b197
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11dee337
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@460f76a6
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55f3c410
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11acdc30
TRACE - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
TRACE - Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
TRACE - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
TRACE - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
TRACE - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
INFO - HHH010002: C3P0 using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:thin:@localhost:1521:xe
INFO - HHH10001001: Connection properties: {user=system, password=****}
INFO - HHH10001003: Autocommit mode: false
DEBUG - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hge0w6aa8nqn3kh2eclg|6bab2585,name=1hge0w6aa8nqn3kh2eclg|6bab2585 registered.
DEBUG - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hge0w6aa8nqn3kh2eclg|6bab2585,name=1hge0w6aa8nqn3kh2eclg|6bab2585 unregistered, in order to be reregistered after update.
DEBUG - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hge0w6aa8nqn3kh2eclg|6bab2585,name=1hge0w6aa8nqn3kh2eclg|6bab2585 registered.
INFO - HHH10001007: JDBC isolation level: <unknown>
INFO - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@390bd81e [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@adcf09a8 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge0w6aa8nqn3kh2eclg|1922e6d, idleConnectionTestPeriod -> 3000, initialPoolSize -> 2, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 300, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 3, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 2, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@7570956 [ description -> null, driverClass -> null, factoryClassLocation -> null, identityToken -> 1hge0w6aa8nqn3kh2eclg|770d4269, jdbcUrl -> jdbc:oracle:thin:@localhost:1521:xe, properties -> {user=******, password=******} ], preferredTestQuery -> null, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, factoryClassLocation -> null, identityToken -> 1hge0w6aa8nqn3kh2eclg|6bab2585, numHelperThreads -> 3 ]
DEBUG - incremented pending_acquires: 1
DEBUG - Starting acquisition series. Incremented pending_acquires [1],  attempts_remaining: 30
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7cbee484
DEBUG - incremented pending_acquires: 2
DEBUG - Starting acquisition series. Incremented pending_acquires [2],  attempts_remaining: 30
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask@7f811d00
DEBUG - com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 config: [start -> 2; min -> 2; max -> 3; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 3000000; mox_resource_age -> 0; max_idle_time -> 300000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 75000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false]
DEBUG - Created new pool for auth, username (masked): 'sy******'.
DEBUG - acquire test -- pool size: 0; target_pool_size: 2; desired target? 1
DEBUG - awaitAvailable(): [unknown]
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 0, unused: 0, excluded: 0]
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@44f60b67.acquireResource() returning. 
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 1, unused: 1, excluded: 0]
DEBUG - decremented pending_acquires: 1
DEBUG - Acquisition series terminated successfully. Decremented pending_acquires [1],  attempts_remaining: 30
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 1, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - Database ->
       name : Oracle
    version : Oracle Database 18c Express Edition Release 18.0.0.0.0 - Production
      major : 18
      minor : 0
DEBUG - Driver ->
       name : Oracle JDBC driver
    version : 12.1.0.2.0
      major : 12
      minor : 1
DEBUG - JDBC version : 4.1
INFO - HHH000400: Using dialect: org.hibernate.dialect.OracleDialect
WARN - HHH000063: The Oracle9Dialect dialect has been deprecated; use either Oracle9iDialect or Oracle10gDialect instead
WARN - HHH000064: The OracleDialect dialect has been deprecated; use Oracle8iDialect instead
DEBUG - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [null]
INFO - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@1b0a7baf
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 1, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - com.mchange.v2.c3p0.impl.NewProxyConnection@62417a16: close() called more than once.
TRACE - Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: com.fdmgroup.model.Professor
TRACE - Normalizing identifier quoting [DTYPE]
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Professor
TRACE - Import: Professor -> com.fdmgroup.model.Professor
TRACE - Import: com.fdmgroup.model.Professor -> com.fdmgroup.model.Professor
TRACE - Normalizing identifier quoting [Professor]
TRACE - Normalizing identifier quoting [Professor]
DEBUG - Bind entity com.fdmgroup.model.Professor on table Professor
TRACE - Processing annotations of com.fdmgroup.model.Professor.professorID
TRACE - Normalizing identifier quoting [professorID]
TRACE - Normalizing identifier quoting [professorID]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Professor), mappingColumn=professorID, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property professorID with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Professor:professorID]
DEBUG - building SimpleValue for professorID
TRACE - Normalizing identifier quoting [professorID]
TRACE - Normalizing identifier quoting [professorID]
TRACE - Normalizing identifier quoting [professorID]
DEBUG - Building property professorID
TRACE - Cascading professorID with null
TRACE - Bind @Id on professorID
TRACE - Processing annotations of com.fdmgroup.model.Professor.professorName
TRACE - Normalizing identifier quoting [professorName]
TRACE - Normalizing identifier quoting [professorName]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Professor), mappingColumn=professorName, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property professorName with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Professor:professorName]
DEBUG - building SimpleValue for professorName
TRACE - Normalizing identifier quoting [professorName]
TRACE - Normalizing identifier quoting [professorName]
TRACE - Normalizing identifier quoting [professorName]
DEBUG - Building property professorName
TRACE - Cascading professorName with null
TRACE - Processing annotations of com.fdmgroup.model.Professor.professorPassword
TRACE - Normalizing identifier quoting [professorPassword]
TRACE - Normalizing identifier quoting [professorPassword]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Professor), mappingColumn=professorPassword, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property professorPassword with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Professor:professorPassword]
DEBUG - building SimpleValue for professorPassword
TRACE - Normalizing identifier quoting [professorPassword]
TRACE - Normalizing identifier quoting [professorPassword]
TRACE - Normalizing identifier quoting [professorPassword]
DEBUG - Building property professorPassword
TRACE - Cascading professorPassword with null
DEBUG - Binding entity from annotated class: com.fdmgroup.model.Student
TRACE - Normalizing identifier quoting [DTYPE]
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Student
TRACE - Import: Student -> com.fdmgroup.model.Student
TRACE - Import: com.fdmgroup.model.Student -> com.fdmgroup.model.Student
TRACE - Normalizing identifier quoting [Student]
TRACE - Normalizing identifier quoting [Student]
DEBUG - Bind entity com.fdmgroup.model.Student on table Student
TRACE - Processing annotations of com.fdmgroup.model.Student.studentID
TRACE - Normalizing identifier quoting [studentID]
TRACE - Normalizing identifier quoting [studentID]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentID, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property studentID with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Student:studentID]
DEBUG - building SimpleValue for studentID
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager@44f60b67.acquireResource() returning. 
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - decremented pending_acquires: 0
DEBUG - Acquisition series terminated successfully. Decremented pending_acquires [0],  attempts_remaining: 30
TRACE - Normalizing identifier quoting [studentID]
TRACE - Normalizing identifier quoting [studentID]
TRACE - Normalizing identifier quoting [studentID]
DEBUG - Building property studentID
TRACE - Cascading studentID with null
TRACE - Bind @Id on studentID
TRACE - Processing annotations of com.fdmgroup.model.Student.firstName
TRACE - Normalizing identifier quoting [firstName]
TRACE - Normalizing identifier quoting [firstName]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstName with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Student:firstName]
DEBUG - building SimpleValue for firstName
TRACE - Normalizing identifier quoting [firstName]
TRACE - Normalizing identifier quoting [firstName]
TRACE - Normalizing identifier quoting [firstName]
DEBUG - Building property firstName
TRACE - Cascading firstName with null
TRACE - Processing annotations of com.fdmgroup.model.Student.lastName
TRACE - Normalizing identifier quoting [lastName]
TRACE - Normalizing identifier quoting [lastName]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastName with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Student:lastName]
DEBUG - building SimpleValue for lastName
TRACE - Normalizing identifier quoting [lastName]
TRACE - Normalizing identifier quoting [lastName]
TRACE - Normalizing identifier quoting [lastName]
DEBUG - Building property lastName
TRACE - Cascading lastName with null
TRACE - Processing annotations of com.fdmgroup.model.Student.ssn
TRACE - Normalizing identifier quoting [ssn]
TRACE - Normalizing identifier quoting [ssn]
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student), mappingColumn=ssn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property ssn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.fdmgroup.model.Student:ssn]
DEBUG - building SimpleValue for ssn
TRACE - Normalizing identifier quoting [ssn]
TRACE - Normalizing identifier quoting [ssn]
TRACE - Normalizing identifier quoting [ssn]
DEBUG - Building property ssn
TRACE - Cascading ssn with null
DEBUG - Starting fillSimpleValue for professorID
DEBUG - Starting fillSimpleValue for professorName
DEBUG - Starting fillSimpleValue for professorPassword
DEBUG - Starting fillSimpleValue for studentID
DEBUG - Starting fillSimpleValue for firstName
DEBUG - Starting fillSimpleValue for lastName
DEBUG - Starting fillSimpleValue for ssn
DEBUG - Forcing column [professorid] to be non-null as it is part of the primary key for table [professor]
DEBUG - Forcing column [studentid] to be non-null as it is part of the primary key for table [student]
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [hibernate_sequence]
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [hibernate_sequence]
TRACE - Interpreting BatchFetchStyle from setting : null
TRACE - Initializing service [role=org.hibernate.resource.transaction.TransactionCoordinatorBuilder]
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): disabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: null
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41ab013
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: disabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): disabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: ON_CLOSE
DEBUG - Generate SQL with comments: enabled
TRACE - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
TRACE - Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
TRACE - Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
TRACE - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@1b28f282
DEBUG - Returning a Reference to the SessionFactory
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:xe, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, sun.desktop=windows, hibernate.c3p0.max_size=3, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, hibernate.c3p0.min_size=2, user.name=Home, hibernate.c3p0.timeout=300, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, java.version=1.8.0_231, user.timezone=America/New_York, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@138fe6ec, path.separator=;, java.vm.version=25.231-b11, hibernate.connection.password=786Rashid110, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=system, user.script=, user.home=C:\Users\Home, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_231/bin/server;C:/Program Files/Java/jre1.8.0_231/bin;C:/Program Files/Java/jre1.8.0_231/lib/amd64;C:\app\Home\product\18.0.0\dbhomeXE\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Program Files\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Users\Home\AppData\Local\Microsoft\WindowsApps;;C:\Users\Home\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Home\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.OracleDialect, hibernate.ejb.persistenceUnitName=users, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hbm, sun.java.command=Client, java.class.path=C:\Users\Home\eclipse-workspace2\StudentCatalog\target\classes;C:\Users\Home\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Home\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.5.Final\hibernate-entitymanager-5.0.5.Final.jar;C:\Users\Home\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Home\.m2\repository\org\hibernate\hibernate-core\5.0.5.Final\hibernate-core-5.0.5.Final.jar;C:\Users\Home\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Home\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\Home\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Home\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Home\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Home\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Home\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Home\.m2\repository\org\hibernate\hibernate-c3p0\5.0.5.Final\hibernate-c3p0-5.0.5.Final.jar;C:\Users\Home\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\Home\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\Home\.m2\repository\com\oracle\ojdbc7\12.1.0.2\ojdbc7-12.1.0.2.jar;C:\Users\Home\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Home\.m2\repository\javax\servlet\jsp-api\2.0\jsp-api-2.0.jar;C:\Users\Home\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Home\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, java.io.tmpdir=C:\Users\Home\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, hibernate.use_sql_comments=true, user.dir=C:\Users\Home\eclipse-workspace2\StudentCatalog, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.c3p0.max_statements=50}
TRACE - Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
DEBUG - Skipping JACC integration as it was not enabled
TRACE - Registering external cascade style [persist : STYLE_PERSIST_SKIPLAZY]
DEBUG - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
TRACE - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
TRACE - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
TRACE - Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
DEBUG - Not known whether passed class name [com.fdmgroup.model.Professor] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.fdmgroup.model.Professor
DEBUG - Not known whether passed class name [com.fdmgroup.model.Professor] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.fdmgroup.model.Professor
TRACE - Skipping duplicate registration of path [professorName], existing type = [org.hibernate.type.StringType@5123a213], incoming type = [org.hibernate.type.StringType@5123a213]
TRACE - Skipping duplicate registration of path [professorPassword], existing type = [org.hibernate.type.StringType@5123a213], incoming type = [org.hibernate.type.StringType@5123a213]
DEBUG - Not known whether passed class name [com.fdmgroup.model.Student] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.fdmgroup.model.Student
DEBUG - Not known whether passed class name [com.fdmgroup.model.Student] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.fdmgroup.model.Student
TRACE - Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@5123a213], incoming type = [org.hibernate.type.StringType@5123a213]
TRACE - Skipping duplicate registration of path [lastName], existing type = [org.hibernate.type.StringType@5123a213], incoming type = [org.hibernate.type.StringType@5123a213]
TRACE - Skipping duplicate registration of path [ssn], existing type = [org.hibernate.type.StringType@5123a213], incoming type = [org.hibernate.type.StringType@5123a213]
DEBUG - Static SQL for entity: com.fdmgroup.model.Professor
DEBUG -  Version select: /* get version com.fdmgroup.model.Professor */ select professorID from Professor where professorID =?
DEBUG -  Snapshot select: /* get current state com.fdmgroup.model.Professor */ select professor_.professorID, professor_.professorName as professo2_0_, professor_.professorPassword as professo3_0_ from Professor professor_ where professor_.professorID=?
DEBUG -  Insert 0: /* insert com.fdmgroup.model.Professor */ insert into Professor (professorName, professorPassword, professorID) values (?, ?, ?)
DEBUG -  Update 0: /* update com.fdmgroup.model.Professor */ update Professor set professorName=?, professorPassword=? where professorID=?
DEBUG -  Delete 0: /* delete com.fdmgroup.model.Professor */ delete from Professor where professorID=?
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4940809c]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16423501
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16423501
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16423501
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [NONE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efcf8a]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a138fc5
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a138fc5
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a138fc5
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [READ]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379ab47b]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@307765b4
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@307765b4
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@307765b4
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [UPGRADE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9e6faf]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c95ac9e
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c95ac9e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c95ac9e
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [UPGRADE_NOWAIT]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4efc1b]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@459f7aa3
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@459f7aa3
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@459f7aa3
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [UPGRADE_SKIPLOCKED]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc586a8]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7db534f2
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7db534f2
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7db534f2
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [FORCE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a2b17b]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a56812e
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a56812e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a56812e
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_READ]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a76b80a]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7eb01b12
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7eb01b12
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7eb01b12
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_WRITE]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4854d6]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d9efe0
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d9efe0
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d9efe0
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [PESSIMISTIC_FORCE_INCREMENT]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e70bd39]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e6516e
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e6516e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e6516e
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [OPTIMISTIC]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
TRACE -  Starting root entity : com.fdmgroup.model.Professor
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de54b40]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43ed0ff3
TRACE - .. Registering AssociationKey : AssociationKey(table=Professor, columns={professorID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43ed0ff3
TRACE - >> Starting entity identifier : com.fdmgroup.model.Professor
DEBUG - Visiting attribute path : professorName
TRACE - >> Starting attribute Attribute(name=professorName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorName, type=string [non-identifier])
DEBUG - Visiting attribute path : professorPassword
TRACE - >> Starting attribute Attribute(name=professorPassword, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=professorPassword, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43ed0ff3
TRACE -  Finished root entity : com.fdmgroup.model.Professor
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Professor)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Professor, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Professor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Professor)
          - SQL table alias mapping - professor0_
          - alias suffix - 0_
          - suffixed key columns - {professo1_0_0_}

DEBUG - Static select for entity com.fdmgroup.model.Professor [OPTIMISTIC_FORCE_INCREMENT]: select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static select for action ACTION_MERGE on entity com.fdmgroup.model.Professor: /* load com.fdmgroup.model.Professor */ select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static select for action ACTION_REFRESH on entity com.fdmgroup.model.Professor: /* load com.fdmgroup.model.Professor */ select professor0_.professorID as professo1_0_0_, professor0_.professorName as professo2_0_0_, professor0_.professorPassword as professo3_0_0_ from Professor professor0_ where professor0_.professorID=?
DEBUG - Static SQL for entity: com.fdmgroup.model.Student
DEBUG -  Version select: /* get version com.fdmgroup.model.Student */ select studentID from Student where studentID =?
DEBUG -  Snapshot select: /* get current state com.fdmgroup.model.Student */ select student_.studentID, student_.firstName as firstNam2_1_, student_.lastName as lastName3_1_, student_.ssn as ssn4_1_ from Student student_ where student_.studentID=?
DEBUG -  Insert 0: /* insert com.fdmgroup.model.Student */ insert into Student (firstName, lastName, ssn, studentID) values (?, ?, ?, ?)
DEBUG -  Update 0: /* update com.fdmgroup.model.Student */ update Student set firstName=?, lastName=?, ssn=? where studentID=?
DEBUG -  Delete 0: /* delete com.fdmgroup.model.Student */ delete from Student where studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388ffbc2]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a50b09c
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a50b09c
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a50b09c
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [NONE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4da855dd]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6691490c
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6691490c
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6691490c
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [READ]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2187fff7]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e5c7f0b
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e5c7f0b
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e5c7f0b
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21d5c1a0]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4de025bf
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4de025bf
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4de025bf
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE_NOWAIT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538613b3]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1eef9aef
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1eef9aef
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1eef9aef
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [UPGRADE_SKIPLOCKED]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11389053]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5db99216
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5db99216
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5db99216
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [FORCE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec11999]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c1bd44c
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c1bd44c
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c1bd44c
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_READ]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f46d94]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@18cc679e
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@18cc679e
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@18cc679e
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_WRITE]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e77b8cf]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c4ca0f9
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c4ca0f9
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c4ca0f9
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [PESSIMISTIC_FORCE_INCREMENT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=? for update nowait
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ef029]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7df587ef
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7df587ef
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7df587ef
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [OPTIMISTIC]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
TRACE -  Starting root entity : com.fdmgroup.model.Student
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e57e95e]
TRACE - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2755d705
TRACE - .. Registering AssociationKey : AssociationKey(table=Student, columns={studentID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2755d705
TRACE - >> Starting entity identifier : com.fdmgroup.model.Student
DEBUG - Visiting attribute path : firstName
TRACE - >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
DEBUG - Visiting attribute path : lastName
TRACE - >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
DEBUG - Visiting attribute path : ssn
TRACE - >> Starting attribute Attribute(name=ssn, type=string [non-identifier])
TRACE - << Finishing up attribute : Attribute(name=ssn, type=string [non-identifier])
TRACE - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2755d705
TRACE -  Finished root entity : com.fdmgroup.model.Student
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.fdmgroup.model.Student)
    - Returns
       - EntityReturnImpl(entity=com.fdmgroup.model.Student, querySpaceUid=<gen:0>, path=com.fdmgroup.model.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.fdmgroup.model.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {studentI1_1_0_}

DEBUG - Static select for entity com.fdmgroup.model.Student [OPTIMISTIC_FORCE_INCREMENT]: select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Static select for action ACTION_MERGE on entity com.fdmgroup.model.Student: /* load com.fdmgroup.model.Student */ select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Static select for action ACTION_REFRESH on entity com.fdmgroup.model.Student: /* load com.fdmgroup.model.Student */ select student0_.studentID as studentI1_1_0_, student0_.firstName as firstNam2_1_0_, student0_.lastName as lastName3_1_0_, student0_.ssn as ssn4_1_0_ from Student student0_ where student0_.studentID=?
DEBUG - Instantiated session factory
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@5fe8b721
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
INFO - HHH000228: Running hbm2ddl schema update
TRACE - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 1, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
TRACE - Normalizing identifier quoting [ADMIN_ID_SEQ]
TRACE - Normalizing identifier quoting [HIBERNATE_SEQUENCE]
TRACE - Normalizing identifier quoting [LOGMNR_DIDS$]
TRACE - Normalizing identifier quoting [LOGMNR_EVOLVE_SEQ$]
TRACE - Normalizing identifier quoting [LOGMNR_SEQ$]
TRACE - Normalizing identifier quoting [LOGMNR_UIDS$]
TRACE - Normalizing identifier quoting [MVIEW$_ADVSEQ_GENERIC]
TRACE - Normalizing identifier quoting [MVIEW$_ADVSEQ_ID]
TRACE - Normalizing identifier quoting [PROFESSOR_ID_SEQ]
TRACE - Normalizing identifier quoting [ROLLING_EVENT_SEQ$]
TRACE - Normalizing identifier quoting [STUDENT_ID_SEQ]
TRACE - Normalizing identifier quoting [USER_ID_SEQ]
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorID]
TRACE - Rendering unquoted identifier [professorID] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORID]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorName]
TRACE - Rendering unquoted identifier [professorName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [professorPassword]
TRACE - Rendering unquoted identifier [professorPassword] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [PROFESSORPASSWORD]
DEBUG - No alter strings for table : Professor
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [studentID]
TRACE - Rendering unquoted identifier [studentID] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [STUDENTID]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [firstName]
TRACE - Rendering unquoted identifier [firstName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [FIRSTNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [lastName]
TRACE - Rendering unquoted identifier [lastName] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [LASTNAME]
TRACE - Normalizing identifier quoting for object name [SYSTEM]
TRACE - Rendering unquoted identifier [SYSTEM] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting for object name [ssn]
TRACE - Rendering unquoted identifier [ssn] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [SSN]
DEBUG - No alter strings for table : Student
TRACE - Normalizing identifier quoting for object name [Professor]
TRACE - Rendering unquoted identifier [Professor] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
TRACE - Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
TRACE - Normalizing identifier quoting for object name [Student]
TRACE - Rendering unquoted identifier [Student] in upper case for use in DatabaseMetaData
TRACE - Normalizing identifier quoting [null]
TRACE - Normalizing identifier quoting [SYSTEM]
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@72c927f1
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - checkinAll(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 0; checked out: 0; num connections: 0; num keys: 0
TRACE - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
DEBUG - No JtaPlatform was specified, checking resolver
TRACE - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
DEBUG - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
TRACE - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
DEBUG - Registering SessionFactory: 6818a283-6ad7-4acf-9c77-39737d94183f (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
TRACE - Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
DEBUG - No actions specified; doing nothing
TRACE - Wrapping up metadata context...
TRACE - Starting entity [com.fdmgroup.model.Professor]
TRACE - Building identifier attribute [com.fdmgroup.model.Professor.professorID]
TRACE - Starting attribute metadata determination [professorID]
TRACE -     Determined member [private int com.fdmgroup.model.Professor.professorID]
TRACE -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
TRACE - Building attribute [com.fdmgroup.model.Professor.professorName]
TRACE - Starting attribute metadata determination [professorName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Professor.professorName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Professor.professorPassword]
TRACE - Starting attribute metadata determination [professorPassword]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Professor.professorPassword]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Completed entity [com.fdmgroup.model.Professor]
TRACE - Starting entity [com.fdmgroup.model.Student]
TRACE - Building identifier attribute [com.fdmgroup.model.Student.studentID]
TRACE - Starting attribute metadata determination [studentID]
TRACE -     Determined member [private int com.fdmgroup.model.Student.studentID]
TRACE -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
TRACE - Building attribute [com.fdmgroup.model.Student.firstName]
TRACE - Starting attribute metadata determination [firstName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.firstName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Student.lastName]
TRACE - Starting attribute metadata determination [lastName]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.lastName]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Building attribute [com.fdmgroup.model.Student.ssn]
TRACE - Starting attribute metadata determination [ssn]
TRACE -     Determined member [private java.lang.String com.fdmgroup.model.Student.ssn]
TRACE -     Determined type [name=string, class=org.hibernate.type.StringType]
TRACE - Completed entity [com.fdmgroup.model.Student]
DEBUG - Registering EntityManagerFactory: users 
WARN - HHH000436: Entity manager factory name (users) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
TRACE - Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@1ee4730
TRACE - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
DEBUG - Statistics initialized [enabled=false]
TRACE - Opened session at timestamp: 15896615082
TRACE - Setting flush mode to: AUTO
TRACE - Setting cache mode to: NORMAL
TRACE - Setting cache mode to: NORMAL
TRACE - Loading entity: [com.fdmgroup.model.Professor#41]
TRACE - Attempting to resolve: [com.fdmgroup.model.Professor#41]
TRACE - Object not resolved in any cache: [com.fdmgroup.model.Professor#41]
TRACE - Fetching entity: [com.fdmgroup.model.Professor#41]
DEBUG - 
    select
        professor0_.professorID as professo1_0_0_,
        professor0_.professorName as professo2_0_0_,
        professor0_.professorPassword as professo3_0_0_ 
    from
        Professor professor0_ 
    where
        professor0_.professorID=?
DEBUG - trace com.mchange.v2.resourcepool.BasicResourcePool@62923ee6 [managed: 2, unused: 0, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@2864fb32)
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@4b629f13
DEBUG - cxnStmtMgr.statementSet( oracle.jdbc.driver.T4CConnection@5cb015c ).size(): 1
DEBUG - checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 1; num connections: 1; num keys: 1
TRACE - Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4263b080]
TRACE - Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4263b080]
TRACE - binding parameter [1] as [INTEGER] - [41]
TRACE - Bound [2] parameters total
TRACE - Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@200a26bc]
TRACE - Processing result set
DEBUG - Starting ResultSet row #0
DEBUG - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
TRACE - hydrating entity state
TRACE - Initializing object from ResultSet: [com.fdmgroup.model.Professor#41]
TRACE - Hydrating entity: [com.fdmgroup.model.Professor#41]
TRACE - extracted value ([professo2_0_0_] : [VARCHAR]) - [xmybbProf12]
TRACE - extracted value ([professo3_0_0_] : [VARCHAR]) - [1321]
TRACE - Done processing result set (1 rows)
TRACE - Total objects hydrated: 1
DEBUG - Resolving associations for [com.fdmgroup.model.Professor#41]
DEBUG - Done materializing entity [com.fdmgroup.model.Professor#41]
TRACE - Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@200a26bc]
TRACE - Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@200a26bc]
TRACE - Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4263b080]
DEBUG - HHH000387: ResultSet's statement was not registered
TRACE - Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4263b080]
DEBUG - checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 1; checked out: 0; num connections: 1; num keys: 1
TRACE - Starting after statement execution processing [ON_CLOSE]
TRACE - Initializing non-lazy collections
DEBUG - Done entity load : com.fdmgroup.model.Professor#41
TRACE - Setting cache mode to: NORMAL
DEBUG - begin
TRACE - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
TRACE - Transaction begun via JDBC Connection.setAutoCommit(false)
TRACE - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
TRACE - Deleting a persistent instance
TRACE - Deleting [com.fdmgroup.model.Professor#41]
TRACE - Setting cache mode to: GET
TRACE - Setting cache mode to: NORMAL
TRACE - Setting cache mode to: GET
TRACE - Setting cache mode to: NORMAL
DEBUG - committing
TRACE - ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
TRACE - SessionImpl#beforeTransactionCompletion()
TRACE - Automatically flushing session
TRACE - Flushing session
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
TRACE - Flushing entities and processing referenced collections
TRACE - Processing unreferenced collections
TRACE - Scheduling collection removes/(re)creates/updates
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.fdmgroup.model.Professor{professorPassword=1321, professorName=xmybbProf12, professorID=41}
TRACE - Executing flush
TRACE - Deleting entity: [com.fdmgroup.model.Professor#41]
TRACE - Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
TRACE - Initializing service [role=org.hibernate.jmx.spi.JmxService]
TRACE - Building batch [size=1]
DEBUG - 
    /* delete com.fdmgroup.model.Professor */ delete 
        from
            Professor 
        where
            professorID=?
DEBUG - com.mchange.v2.async.ThreadPoolAsynchronousRunner@7bb3a9fe: Adding task to queue -- com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask@7a0e1b5e
DEBUG - cxnStmtMgr.statementSet( oracle.jdbc.driver.T4CConnection@5cb015c ).size(): 2
DEBUG - checkoutStatement: com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 1; num connections: 1; num keys: 2
TRACE - Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c18432b]
TRACE - binding parameter [1] as [INTEGER] - [41]
TRACE - Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c18432b]
TRACE - Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7c18432b]
DEBUG - checkinStatement(): com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache stats -- total size: 2; checked out: 0; num connections: 1; num keys: 2
TRACE - Starting after statement execution processing [ON_CLOSE]
TRACE - Starting after statement execution processing [ON_CLOSE]
TRACE - Post flush
TRACE - SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
TRACE - Preparing to commit transaction via JDBC Connection.commit()
TRACE - Transaction committed via JDBC Connection.commit()
TRACE - LogicalConnection#afterTransaction
TRACE - Releasing JDBC resources
TRACE - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
TRACE - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
TRACE - SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
